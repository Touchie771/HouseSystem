plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

group = 'me.touchie771'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    // Required for LiteCommands artifacts
    maven {
        name = "panda-repo"
        url = uri("https://repo.panda-lang.org/releases")
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT")
    // LiteCommands for Bukkit/Paper platform (shaded into final jar)
    implementation("dev.rollczi:litecommands-bukkit:3.10.6")
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21")
    }
    // Make the shaded jar the default artifact. No relocation to avoid ASM remapping issues on JDK 21.
    shadowJar {
        archiveClassifier.set("")
    }
    // Ensure assemble/build produce the shaded artifact
    assemble { dependsOn(shadowJar) }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
    // Needed by LiteCommands to retain parameter names
    options.compilerArgs += ['-parameters']
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}